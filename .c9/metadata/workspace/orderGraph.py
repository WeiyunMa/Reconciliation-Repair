{"filter":false,"title":"orderGraph.py","tooltip":"/orderGraph.py","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":0,"column":0},"end":{"row":43,"column":13},"action":"insert","lines":["import copy","def date(recon):","\t\"\"\"takes a Tree and returns a dictionary representation of the ordering of the tree\"\"\"","\torder = {}","\tdicto = {}","\tLeaves = {}","\tLonerList = []","\tfor key in recon.keys():","\t\tif  key != None:","\t\t\tdicto[key] = 0","\t\tfor child in recon[key]:","\t\t\tif child != None:","\t\t\t\tdicto[child] = 0","\t\t\telse:","\t\t\t\tLeaves[key] = True","\tfor key in Leaves.keys():","\t\tif key in dicto.keys():","\t\t\tdel dicto[key]","\tfor key in dicto.keys():","\t\tfor child in recon[key]:","\t\t\tif child != None and child in dicto:","\t\t\t\tdicto[child] += 1","\tplace = 0","\tfor key in dicto.keys():","\t\tif dicto[key] == 0:","\t\t\tdel dicto[key]","\t\t\tLonerList.append(key)","\twhile LonerList:","\t\tx = LonerList[0]","\t\tdel LonerList[0]","\t\torder[x] = place","\t\tplace += 1","\t\tfor child in recon[x]:","\t\t\tif child in dicto.keys():","\t\t\t\tdicto[child] -= 1","\t\t\t\tif dicto[child] == 0:","\t\t\t\t\tdel dicto[child]","\t\t\t\t\tLonerList.append(child)","\tif len(dicto.keys()) > 0:","\t\tprint \"TimeTravel\", dicto,","\t\treturn False","\tfor item in Leaves:","\t\torder[item] = len(Leaves)","\treturn order"],"id":1}],[{"start":{"row":14,"column":16},"end":{"row":14,"column":73},"action":"insert","lines":["sudo easy_install -f http://biopython.org/DIST/ biopython"],"id":2}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"insert","lines":["#"],"id":3}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"insert","lines":[" "],"id":4}],[{"start":{"row":14,"column":3},"end":{"row":14,"column":4},"action":"insert","lines":["#"],"id":5}],[{"start":{"row":39,"column":2},"end":{"row":39,"column":3},"action":"insert","lines":["＃"],"id":6}],[{"start":{"row":39,"column":3},"end":{"row":39,"column":4},"action":"insert","lines":[" "],"id":7}],[{"start":{"row":39,"column":3},"end":{"row":39,"column":4},"action":"remove","lines":[" "],"id":8}],[{"start":{"row":39,"column":2},"end":{"row":39,"column":3},"action":"remove","lines":["＃"],"id":9}],[{"start":{"row":39,"column":2},"end":{"row":39,"column":3},"action":"insert","lines":["#"],"id":10}],[{"start":{"row":39,"column":3},"end":{"row":39,"column":4},"action":"insert","lines":[" "],"id":11}]]},"ace":{"folds":[],"scrolltop":489,"scrollleft":0,"selection":{"start":{"row":39,"column":4},"end":{"row":39,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":131,"mode":"ace/mode/python"}},"timestamp":1437760655000,"hash":"108b69537bebd46bb928cb3e42e224c673396061"}